services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8090:80"  # Expose frontend and API through NGINX
    depends_on:
      - api
      - frontend
    networks:
      - app_network  

  api:
    build: .
    env_file:
      - .env
    expose:
      - "8000"
    networks:
      - app_network
    depends_on:
      - db
      - redis
      - celery
      - celery-beat
    command: >
      gunicorn --bind 0.0.0.0:8000 --workers=3 
      --access-logfile - --error-logfile - --log-level debug encouragement_proj.wsgi:application

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=customer_db
    ports:
      - '5432:5432'
    networks:
      - app_network
    volumes: 
      - postgres_data:/var/lib/postgresql/data
  
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - app_network    
    depends_on:
      - db

  celery:
    build: .
    command: ./wait-for-it.sh redis:6379 -- celery -A encouragement_proj worker --loglevel=info
    volumes:
      - .:/src
    networks:
      - app_network    
    depends_on:
      - redis
      - db

  celery-beat:
    build: .
    command: ./wait-for-it.sh redis:6379 -- celery -A encouragement_proj beat --loglevel=info
    volumes:
      - .:/src
    networks:
      - app_network
    depends_on:
      - redis
      - db

  frontend:
    image: encouragement-front
    build: 
      context: ../react_encouragement_frontend
      dockerfile: Dockerfile  
    ports:
      - "80"
    networks:
      - app_network
    restart: always
    depends_on:
      - api

  

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
